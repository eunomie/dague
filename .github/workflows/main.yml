name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Fetches entire history, so we can analyze commits since last tag
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Find the new version first, and only create the tag when the image has been built and pushed
      - name: Find new version
        id: new_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          dry_run: true
          release_branches: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
      # Tag but don't push it, just to generate binary (if needed) with the right tag
      - name: Local tag
        run: git tag ${{ steps.new_version.outputs.new_tag }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: eunomie/dague
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      # Remove tag so next step can work as expected
      - name: Remove local tag
        run: git tag -d ${{ steps.new_version.outputs.new_tag }}
      - name: Tag version
        if: github.event_name == 'push'
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.new_version.outputs.new_version }}
          release_branches: main
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        if: github.event_name == 'push'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.new_version.outputs.new_tag }}
          release_name: Release ${{ steps.new_version.outputs.new_tag }}
          body: ${{ steps.new_version.outputs.changelog }}
